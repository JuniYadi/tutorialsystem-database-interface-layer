FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# DBIL

END POINT API Database to DynamoDB

## API Version
* /v1

## List All Content Category [/content/category]

**Endpoint Path:** `/content/category`

### Example [GET]

+ Response 200 (application/json)

        [
            {
                "name": "Funny Videos",
                "description": "Only For Funny",
                "created_at": "2019-07-04T21:21:01+07:00",
                "id": "a8486ed6-59da-49c7-9605-466bef6dcd83",
                "updated_at": "2019-07-04T21:21:01+07:00"
            },
            {
                "name": "Funny Videos 223",
                "description": "Only For Funny 223",
                "created_at": "2019-07-04T21:27:23+07:00",
                "id": "cf31fb2e-9d06-49f9-af6f-c708edfe0871",
                "updated_at": "2019-07-04T22:13:07+07:00"
            }
        ]

## Create a New Content Category [/content/category/store]

**Endpoint Path:** `/content/category/store`

### Requests
| Parameter | type | Description |
| -- | --- | -- |
| `name` | string | name of content category |
| `description` | string | description of content category |

### Example [POST]
    
+ Request (application/json)

        {
           "name": "Action",
           "description": "Movie Action"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been saved"
            },
            "result": {
                "id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c"
            }
        }
        
## Get Content Category by ID [/content/category/bae04ac0-234a-431a-bed4-0bbc7026aa1c]

**Endpoint Path:** `/content/category/{id}`

### Example [GET]

+ Response 200 (application/json)

        {
            "name": "Action",
            "description": "Movie Action",
            "created_at": "2019-07-05T09:47:05+07:00",
            "id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
            "updated_at": "2019-07-05T09:47:05+07:00"
        }

## Search Content Category [/content/category/search]

**Endpoint Path:** `/content/category/search`

### Requests
| Parameter | type | Description |
| -- | --- | -- |
| `name` | string | name of content category |

### Example [POST]
    
+ Request (application/json)

        {
           "name": "Action",
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "search query has been performed, data has been found",
                "total": 2
            },
            "result": [
                {
                    "name": "Action",
                    "description": "Movie Action",
                    "created_at": "2019-07-05T09:47:05+07:00",
                    "id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
                    "updated_at": "2019-07-05T09:47:05+07:00"
                },
                {
                    "name": "Action",
                    "description": "Movie Action",
                    "created_at": "2019-07-05T09:49:11+07:00",
                    "id": "8f245544-b4ac-468d-b291-7d10806b94d9",
                    "updated_at": "2019-07-05T09:49:11+07:00"
                }
            ]
        }
        
## Update Content Category by ID [/content/category/update/bae04ac0-234a-431a-bed4-0bbc7026aa1c]

**Endpoint Path:** `/content/category/update/{id}`

### Requests
| Parameter | type | Description |
| -- | --- | -- |
| `name` | string | name of content category |
| `description` | string | description of content category |

### Example [POST]
    
+ Request (application/json)

        {
           "name": "Action 2",
           "description": "Movie Action 2"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been updated"
            },
            "result": {
                "id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c"
            }
        }
        
## Delete Content Category by ID [/content/category/delete/bae04ac0-234a-431a-bed4-0bbc7026aa1c]

**Endpoint Path:** `/content/category/delete/{id}`

### Example [POST]

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been deleted"
            }
        }

## List All Content Metadata [/content/metadata]

**Endpoint Path:** `/content/metadata`

### Example [GET]

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "index list query has been performed, data has been found",
                "total": 1
            },
            "result": [
                {
                    "video_duration": "600",
                    "video_resolution": "360p, 480p, 720p, 1080p, 1080p HD",
                    "video_users_likes": "80",
                    "created_at": "2019-07-05T12:58:16+07:00",
                    "video_format": "mp4",
                    "video_share": "5",
                    "video_dislikes": "2",
                    "video_downloads": "11",
                    "video_description": "Tutorial of Programers",
                    "category_id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
                    "video_title": "Pojok Programers",
                    "video_size": "104857600",
                    "video_comments": "2",
                    "updated_at": "2019-07-05T12:58:16+07:00",
                    "name_uploader": "Juni Yadi",
                    "video_likes": "100",
                    "video_subtitle": "English, Indonesia",
                    "video_genre": "Tutorial",
                    "id": "81622337-8d48-4d5b-a41d-3f04d157385c",
                    "video_users_dislikes": "2",
                    "video_saves": "1",
                    "video_viewers": "10"
                }
            ]
        }

## Create a New Content Metadata [/content/metadata/store]

**Endpoint Path:** `/content/metadata/store`

### Requests
| Parameter              | type   | Description |
| ---------------------- | ------ | ----------- |
| `category_id`          | string | ID From Content Category |
| `name_uploader`        | string | Name of Uploader |
| `video_title`          | string | Title of Video |
| `video_description`    | string | Description of Video |
| `video_subtitle`       | string | Subtitle of Video |
| `video_genre`          | string | Genre of Video |
| `video_format`         | string | Format of Video |
| `video_size`           | int    | Size of Video [using bytes](https://convertlive.com/u/convert/megabytes/to/bytes#100) |
| `video_resolution`     | string | Resolution of Video |
| `video_duration`       | int    | Duration of Video [using seconds](https://convertlive.com/c/convert/time) |
| `video_viewers`        | int    | Viewers of Video |
| `video_comments`       | int    | Comments of Video |
| `video_likes`          | int    | Likes of Video |
| `video_dislikes`       | int    | Dislikes of Video |
| `video_users_likes`    | int    | Users Likes of Video |
| `video_users_dislikes` | int    | Users Dislike of Video |
| `video_share`          | int    | Share of Video |
| `video_saves`          | int    | Saves of Video |
| `video_downloads`      | int    | Downloads of Video |

### Example [POST]
    
+ Request (application/json)

        {
            "category_id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
            "name_uploader": "Juni Yadi",
            "video_title": "Pojok Programers",
            "video_description": "Tutorial of Programers",
            "video_subtitle": "English, Indonesia",
            "video_genre": "Tutorial",
            "video_format": "mp4",
            "video_size": "104857600",
            "video_resolution": "360p, 480p, 720p, 1080p, 1080p HD",
            "video_duration": "600",
            "video_viewers": "10",
            "video_comments": "2",
            "video_likes": "100",
            "video_dislikes": "2",
            "video_users_likes": "80",
            "video_users_dislikes": "2",
            "video_share": "5",
            "video_saves": "1",
            "video_downloads": "11"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been saved"
            },
            "result": {
                "id": "81622337-8d48-4d5b-a41d-3f04d157385c"
            }
        }
        
## Get Content Metadata by ID [/content/metadata/81622337-8d48-4d5b-a41d-3f04d157385c]

**Endpoint Path:** `/content/metadata/{id}`
### Example [GET]

+ Response 200 (application/json)

        {
            "video_duration": "600",
            "video_resolution": "360p, 480p, 720p, 1080p, 1080p HD",
            "video_users_likes": "80",
            "created_at": "2019-07-05T12:58:16+07:00",
            "video_format": "mp4",
            "video_share": "5",
            "video_dislikes": "2",
            "video_downloads": "11",
            "video_description": "Tutorial of Programers",
            "category_id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
            "video_title": "Pojok Programers",
            "video_size": "104857600",
            "video_comments": "2",
            "updated_at": "2019-07-05T12:58:16+07:00",
            "name_uploader": "Juni Yadi",
            "video_likes": "100",
            "video_subtitle": "English, Indonesia",
            "video_genre": "Tutorial",
            "id": "81622337-8d48-4d5b-a41d-3f04d157385c",
            "video_users_dislikes": "2",
            "video_saves": "1",
            "video_viewers": "10"
        }

## Search Content Metadata [/content/metadata/search]

**Endpoint Path:** `/content/metadata/search`

### Requests
| Parameter | type   | Description                                |
| --------- | ------ | ------------------------------------------ |
| `query`   | string | Based on Table Name and Using `URL Encode` |

### Important
* Before make request query, make sure, close by double quote tags and separate with comma if using multiple query
* RAW: 
  * Single Query : `query="video_title=Pojok Programers"`
  * Multiple Query : `query="video_title=Pojok Programers,video_genre=Tutorial"`
* RAW Encode:
  * Single Query : `query=%22video_title%3DPojok+Programers%22`
  * Multiple Query : `%22video_title%3DPojok+Programers%2Cvideo_genre%3DTutorial%22`

### Example Query [POST]

| Parameter     | value              |
| ------------- | ------------------ |
| `video_title` | `Pojok Programers` |
| `video_genre` | `Tutorial`         |


+ Request (application/json)

        {
            "query": "%22video_title%3DPojok+Programers%22"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "search query has been performed, data has been found",
                "total": 1
            },
            "result": [
                {
                    "video_duration": "600",
                    "video_resolution": "360p, 480p, 720p, 1080p, 1080p HD",
                    "video_users_likes": "80",
                    "created_at": "2019-07-05T12:58:16+07:00",
                    "video_format": "mp4",
                    "video_share": "5",
                    "video_dislikes": "2",
                    "video_downloads": "11",
                    "video_description": "Tutorial of Programers",
                    "category_id": "bae04ac0-234a-431a-bed4-0bbc7026aa1c",
                    "video_title": "Pojok Programers",
                    "video_size": "104857600",
                    "video_comments": "2",
                    "updated_at": "2019-07-05T12:58:16+07:00",
                    "name_uploader": "Juni Yadi",
                    "video_likes": "100",
                    "video_subtitle": "English, Indonesia",
                    "video_genre": "Tutorial",
                    "id": "81622337-8d48-4d5b-a41d-3f04d157385c",
                    "video_users_dislikes": "2",
                    "video_saves": "1",
                    "video_viewers": "10"
                }
            ]
        }
        
## Update Content Metadata by ID [/content/metadata/update/81622337-8d48-4d5b-a41d-3f04d157385c]

**Endpoint Path:** `/content/metadata/update/{id}`

### Requests
| Parameter              | type   | Description |
| ---------------------- | ------ | ----------- |
| `category_id`          | string | ID From Content Category |
| `name_uploader`        | string | Name of Uploader |
| `video_title`          | string | Title of Video |
| `video_description`    | string | Description of Video |
| `video_subtitle`       | string | Subtitle of Video |
| `video_genre`          | string | Genre of Video |
| `video_format`         | string | Format of Video |
| `video_size`           | int    | Size of Video [using bytes](https://convertlive.com/u/convert/megabytes/to/bytes#100) |
| `video_resolution`     | string | Resolution of Video |
| `video_duration`       | int    | Duration of Video [using seconds](https://convertlive.com/c/convert/time) |
| `video_viewers`        | int    | Viewers of Video |
| `video_comments`       | int    | Comments of Video |
| `video_likes`          | int    | Likes of Video |
| `video_dislikes`       | int    | Dislikes of Video |
| `video_users_likes`    | int    | Users Likes of Video |
| `video_users_dislikes` | int    | Users Dislike of Video |
| `video_share`          | int    | Share of Video |
| `video_saves`          | int    | Saves of Video |
| `video_downloads`      | int    | Downloads of Video |

### Example [POST]
    
+ Request (application/json)

        {
            "video_title": "Pojok Programers 2077"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been updated"
            },
            "result": {
                "id": "81622337-8d48-4d5b-a41d-3f04d157385c"
            }
        }
        
## Delete Content Metadata by ID [/content/metadata/delete/81622337-8d48-4d5b-a41d-3f04d157385c]

**Endpoint Path:** `/content/metadata/delete/{id}`

### Example [POST]

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been deleted"
            }
        }

## List All Content Comment [/content/comment/metadata/83f75217-bcaf-415f-be53-8ca34a5b16be]

**Endpoint Path:** `/content/comment/metadata/{id}`

### Example [GET]

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "search query has been performed, data has been found",
                "total": 2
            },
            "result": [
                {
                    "reply_id": null,
                    "updated_at": "2019-07-08T15:06:47+07:00",
                    "user_id": "123",
                    "metadata_id": "83f75217-bcaf-415f-be53-8ca34a5b16be",
                    "created_at": "2019-07-08T15:04:52+07:00",
                    "id": "b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d",
                    "message": "this just test"
                },
                {
                    "reply_id": "b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d",
                    "updated_at": "2019-07-08T15:07:48+07:00",
                    "user_id": "321",
                    "metadata_id": "83f75217-bcaf-415f-be53-8ca34a5b16be",
                    "created_at": "2019-07-08T15:05:43+07:00",
                    "id": "5ea23f47-94ab-4a38-88e4-a008bb2df23a",
                    "message": "this just reply test"
                }
            ]
        }

## Create a New Content Comment [/content/comment/store]

**Endpoint Path:** `/content/comment/store`

### Requests
| Parameter     | type   | Description                                               |
| ------------- | ------ | --------------------------------------------------------- |
| `metadata_id` | string | Metadata ID from Content Metadata                         |
| `user_id`     | string | User ID                                                   |
| `reply_id`    | string | ID From Comment, if they reply another comment (Optional) |
| `message`     | string | Reply Message                                             |

### Example [POST]
    
+ Request (application/json)

        {
            "metadata_id": "83f75217-bcaf-415f-be53-8ca34a5b16be",
            "user_id": "123",
            "message": "this just test"
        }


+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been saved"
            },
            "result": {
                "id": "b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d"
            }
        }

## Get Comment by ID [/content/comment/83f75217-bcaf-415f-be53-8ca34a5b16be]

**Endpoint Path:** `/content/comment/{id}`

### Example [GET]

+ Response 200 (application/json)

        {
            "reply_id": "b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d",
            "updated_at": "2019-07-08T15:07:48+07:00",
            "user_id": "321",
            "metadata_id": "83f75217-bcaf-415f-be53-8ca34a5b16be",
            "created_at": "2019-07-08T15:05:43+07:00",
            "id": "5ea23f47-94ab-4a38-88e4-a008bb2df23a",
            "message": "this just reply test"
        }

## Update Content Comment by ID [/content/comment/update/b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d]

**Endpoint Path:** `/content/comment/update/{id}`

### Requests
| Parameter     | type   | Description                                               |
| ------------- | ------ | --------------------------------------------------------- |
| `metadata_id` | string | Metadata ID from Content Metadata                         |
| `user_id`     | string | User ID                                                   |
| `reply_id`    | string | ID From Comment, if they reply another comment (Optional) |
| `message`     | string | Reply Message                                             |

### Example [POST]
    
+ Request (application/json)

        {
            "metadata_id": "83f75217-bcaf-415f-1234-8ca34a5b16be"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been updated"
            },
            "result": {
                "id": "b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d"
            }
        }
        
## Delete Content Comment by ID [/content/metadata/delete/b14571d3-ccc4-4d0a-977f-4ce6fdfc6b1d]

**Endpoint Path:** `/content/comment/delete/{id}`

### Example [POST]

+ Response 200 (application/json)

        {
            "status": {
                "code": "200",
                "message": "data has been deleted"
            }
        }